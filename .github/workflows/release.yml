name: Release binaries
on: 
  push:
    tags:
    - '*'
  workflow_dispatch:
    inputs:
      newVersion:
        type: string
        description: 'Release version'
        required: true
env:
  RELEASE_TAG: ${{ inputs.newVersion || github.ref_name }}

jobs:
  draftRelease:
    runs-on: ubuntu-latest
    outputs:
      ghUploadURL: ${{ steps.ghRelease.outputs.upload_url }}
    steps:
      - uses: ncipollo/release-action@v1
        id: ghRelease
        with:
          tag: ${{ env.RELEASE_TAG }}
          draft: true

  build:
    needs: draftRelease
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-11
            xcode: 13.2.1
          - os: macos-11
            xcode: 12.4
          - os: macos-10.15
            xcode: 11.3.1
    env:
      DEVELOPER_DIR: /Applications/Xcode_${{ matrix.xcode }}.app
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Build dependencies
        id: depends
        run: |
          ./build_depends.sh || exit 1
          ./archive_depends.sh .
          echo "::set-output name=dependsArchive::$(ls *.txz)"
      - name: Save artifact
        uses: actions/upload-artifact@v3
        with:
          path: ${{ steps.depends.outputs.dependsArchive }}
          retention-days: 7
      - name: Upload archive to the draft release
        run: |
          dependsArchive='${{ steps.depends.outputs.dependsArchive }}'
          uploadURL=$(sed "s/{?name,label}/?name=$dependsArchive/" <<<'${{ needs.draftRelease.outputs.ghUploadURL }}')
          curl "$uploadURL" \
            -d @"$dependsArchive" \
            -H 'Content-Type: application/octet-stream' \
            -H 'Authorization: token ${{ github.token }}'

  publishRelease:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref_type == 'tag'
    steps:
      - uses: ncipollo/release-action@v1
        name: Publish release
        with:
          allowUpdates: true
          tag: ${{ env.RELEASE_TAG }}
          draft: false
